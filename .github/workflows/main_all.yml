name: 编译所有
run-name: 编译所有
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: install dependency
        run: sudo apt -y install libssh-dev musl musl-dev musl-tools
      #      - name: install dependency
      #        run: >
      #          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential
      #          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib
      #          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev
      #          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz
      #          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils
      #          rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
      - name: Get current date
        id: datetime
        run: echo "now=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cd ${{ github.workspace }}
      - name: 新增执行权限
        run: sudo chmod 777 -R *
      - run: ./scripts/feeds update -a
      - run: ./scripts/feeds install libpam liblzma libnetsnmp
      - run: ./scripts/feeds install -a
      - run: make defconfig
      - run: cat .config
      - run: rm -rf package/feeds/luci/luci-app-apinger
      - run: make download -j16
      - run: make -j1 V=s
      #      - run: make buildinfo -j $(($(nproc)+1))
      #      - run: make diffconfig buildversion feedsversion -j $(($(nproc)+1))
      #      - run: sudo apt-get install flex bison -y
      #      - run: make target/compile -j1 V=s
      #      - run: make package/kernel/button-hotplug/compile -j1 V=s
      #      - run: make package/compile -j1 V=s
      #      - run: make package/index -j1 V=s
      - name: Zip the Build
        run: zip -r openwrt.zip ./bin/.[!.]* ./bin/*
      # 需要在项目里设置权限
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.datetime.outputs.now}}
          release_name: ${{steps.datetime.outputs.now}}
          body: 编译测试的 请不要下载
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: openwrt.zip
          asset_name: openwrt.zip
          asset_content_type: application/zip
